name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: 'orocale'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build Artifact
      run: mvn clean package -DskipTests=true
    
    - name: Archive Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Jar-Files
        path: target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: 'orocale'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run Unit Tests
      run: mvn test

    - name: Publish Test Results
      uses: actions/upload-artifact@v4
      with:
        name: Test-Results
        path: target/surefire-reports/*.xml

    - name: Publish JaCoCo Report
      uses: actions/upload-artifact@v4
      with:
        name: JaCoCo-Report
        path: target/jacoco.exec
        
  sonar:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: 'orocale'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Securely stored SonarQube token
      run: mvn sonar:sonar -Dsonar.projectKey=numeric-app -Dsonar.host.url=http://34.133.34.164:9000

    - name: Wait for SonarQube Quality Gate
      uses: sonarsource/sonarcloud-github-action@v1.4
      with:
        timeout: 120  # Timeout in seconds
